DECLARE @OLDMVNOID INT
DECLARE @NEWMVNOID INT
DECLARE @OLDMVNOPREFIX varchar(20)
DECLARE @NEWMVNOPREFIX varchar(20)

SET @OLDMVNOID = 500000
SET @NEWMVNOID = 130000


SET @OLDMVNOPREFIX = 'BT'
SET @NEWMVNOPREFIX = 'VEE '

	
--SELECT *FROM CRM_DEALERS WHERE PARENTID = -1


--1. Back up LIVE tables
	--SELECT * INTO SYS25_ROLE_SAM_20110707_BAK FROM SYS25_ROLE
	--SELECT * INTO SYS30_PERMISSION_SAM_20110707_BAK FROM SYS30_PERMISSION
		
	IF EXISTS ( 
	SELECT * FROM sys.objects 
	WHERE object_id = OBJECT_ID(N'SYS25_ROLE_TEMP_SAM') 
	AND type in (N'U')
	)
	BEGIN
		DROP TABLE SYS25_ROLE_TEMP_SAM
	END
	
	IF EXISTS ( 
	SELECT * FROM sys.objects 
	WHERE object_id = OBJECT_ID(N'SYS30_PERMISSION_TEMP_SAM') 
	AND type in (N'U')
	)
	BEGIN
		DROP TABLE SYS30_PERMISSION_TEMP_SAM
	END
	
	IF EXISTS ( 
	SELECT * FROM sys.objects 
	WHERE object_id = OBJECT_ID(N'SYS25_ROLE_TEMP_SAM1') 
	AND type in (N'U')
	)
	BEGIN
		DROP TABLE SYS25_ROLE_TEMP_SAM1
	END
	
	
	IF EXISTS ( 
	SELECT * FROM sys.objects 
	WHERE object_id = OBJECT_ID(N'SYS30_PERMISSION_TEMP_SAM2') 
	AND type in (N'U')
	)
	BEGIN
		DROP TABLE SYS30_PERMISSION_TEMP_SAM2
	END
	
	IF EXISTS ( 
	SELECT * FROM sys.objects 
	WHERE object_id = OBJECT_ID(N'SYS30_PERMISSION_TEMP_SAM3') 
	AND type in (N'U')
	)
	BEGIN
		DROP TABLE SYS30_PERMISSION_TEMP_SAM3
	END
	
	
--2. Delete the existed data for Give MVNO
	DELETE SYS30_PERMISSION WHERE RoleID IN
	( 
		SELECT ROLEID FROM SYS25_ROLE WHERE DEALERID = @NEWMVNOID
	) 

	DELETE FROM SYS25_ROLE WHERE DEALERID = @NEWMVNOID

--3. Create template table
	--DELETE SYS25_ROLE_TEMP_SAM 
	SELECT * INTO SYS25_ROLE_TEMP_SAM FROM SYS25_ROLE WHERE DealerID = @OLDMVNOID
	
	SELECT * INTO SYS30_PERMISSION_TEMP_SAM FROM SYS30_PERMISSION WHERE RoleID IN
	( 
		SELECT ROLEID FROM SYS25_ROLE WHERE DEALERID = @OLDMVNOID
	) 
	

--4. Update Role ID 
	DECLARE @ROLEID INT 
	DECLARE @RoleIDNEW INT 

	SELECT DISTINCT ROLEID INTO SYS25_ROLE_TEMP_SAM1 FROM SYS25_ROLE_TEMP_SAM ORDER BY ROLEID 
		
	DECLARE CURSOR_ID CURSOR LOCAL FOR	
		SELECT DISTINCT ROLEID   FROM SYS25_ROLE_TEMP_SAM1 ORDER BY ROLEID 
	
	
	SET @RoleIDNEW = (SELECT ISNULL(MAX(RoleID),1000000000)  FROM SYS25_ROLE WHERE RoleID LIKE '100%')
		
	OPEN CURSOR_ID
	FETCH CURSOR_ID INTO @ROLEID 
	WHILE (@@FETCH_STATUS = 0)
	BEGIN	
		
		SET @RoleIDNEW = @RoleIDNEW + 1
		--SYS25_ROLE_TEMP_SAM 
		UPDATE SYS25_ROLE_TEMP_SAM SET ROLEID = @RoleIDNEW WHERE ROLEID = @ROLEID
		
		--SYS30_PERMISSION_TEMP_SAM
		UPDATE SYS30_PERMISSION_TEMP_SAM SET ROLEID = @RoleIDNEW WHERE ROLEID = @ROLEID

		FETCH CURSOR_ID INTO  @ROLEID
	END
	CLOSE CURSOR_ID
	DEALLOCATE CURSOR_ID
	

--5. Update MVNO ID
	UPDATE SYS25_ROLE_TEMP_SAM SET DEALERID = @NEWMVNOID 

--6. Update Permission ID
	SELECT TOP 1 * INTO SYS30_PERMISSION_TEMP_SAM3 FROM SYS30_PERMISSION_TEMP_SAM
	DELETE  SYS30_PERMISSION_TEMP_SAM3
	
	
	SELECT  PERMISSIONID INTO SYS30_PERMISSION_TEMP_SAM2 FROM SYS30_PERMISSION_TEMP_SAM	
	
	DECLARE @STARTPERMISSIONID INT
	SET @STARTPERMISSIONID = (SELECT MAX(PERMISSIONID) +1 FROM SYS30_PERMISSION WHERE PERMISSIONID LIKE '100%')
	
	INSERT INTO SYS30_PERMISSION_TEMP_SAM3
	SELECT DISTINCT (ROW_NUMBER() OVER(ORDER BY B.PERMISSIONID ASC) )+ @STARTPERMISSIONID, ROLEID,	MODULEID,	FORMNAME,	FULLCLASSNAME,	ELEMENTID,	ELEMENTNAME,	ISREAD,
			ISWRITE,	ISHIDE,	ISMANDETORY,	FORMAT,	EVENT,	DEFAULTVALUE,	XAXIS,	YAXIS			
	FROM SYS30_PERMISSION_TEMP_SAM A, SYS30_PERMISSION_TEMP_SAM2 B
	WHERE A.PERMISSIONID = B.PERMISSIONID

	
--7. Checking
	SELECT COUNT(0) as 'should be as 0' FROM SYS30_PERMISSION_TEMP_SAM3 	
	WHERE PERMISSIONID IN (SELECT PERMISSIONID FROM SYS30_PERMISSION)

	SELECT COUNT(0) as 'should be as 0' FROM SYS30_PERMISSION 
	WHERE PERMISSIONID IN (SELECT PERMISSIONID FROM SYS30_PERMISSION_TEMP_SAM3)

	SELECT COUNT(0) as 'should be as 0' FROM SYS30_PERMISSION_TEMP_SAM3  
	WHERE ROLEID NOT IN (SELECT ROLEID FROM SYS25_ROLE_TEMP_SAM)

	SELECT COUNT(0) as 'should be as 0' FROM SYS25_ROLE_TEMP_SAM 
	WHERE ROLEID IN (SELECT ROLEID FROM SYS25_ROLE)

--8. Update Role Name
	UPDATE SYS25_ROLE_TEMP_SAM 
	SET RoleName = @NEWMVNOPREFIX + SUBSTRING(LTRIM(RoleName),  LEN(@OLDMVNOPREFIX) + 2,20)
	WHERE SUBSTRING(LTRIM(RoleName),1, LEN(@OLDMVNOPREFIX)) = @OLDMVNOPREFIX
	
	UPDATE SYS25_ROLE_TEMP_SAM 
	SET dealernode =  	@NEWMVNOPREFIX
	
	
--8. Import to LIVE tables
	INSERT INTO SYS25_ROLE 
	SELECT * FROM SYS25_ROLE_TEMP_SAM

	INSERT INTO SYS30_PERMISSION 
	SELECT  * FROM SYS30_PERMISSION_TEMP_SAM3
	